{"version":3,"sources":["/table/state.js"],"names":["TableService","Service","defaultData","cols","headType","Head","bodyType","Body","toolType","Tool","checkboxType","Checkbox","titleHeight","rowHeight","toolPosition","bodyPosition","checkbox","tools","tool","head","body","data","checkPropName","isCheckAll","checks","onupdate","current","setTable","_data","map","col","index","push","key","width","align","value","height","length","title","a","Object","assign","checkRow","_index","indexOf","splice","checkAll","b"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEMA,Y,WAiEJ,mBAAO,UAAP,C,UAWA,mBAAO,UAAP,C,YA5EF,MAAMA,YAAN,SAA2BC,cAA3B,CAAmC;AAClCC,EAAAA,WAAW,GAAG;AACb,WAAO;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,QAAQ,EAAEC,aAFJ;AAGNC,MAAAA,QAAQ,EAAEC,eAHJ;AAINC,MAAAA,QAAQ,EAAEC,aAJJ;AAKNC,MAAAA,YAAY,EAAEC,iBALR;AAMNC,MAAAA,WAAW,EAAE,EANP;AAONC,MAAAA,SAAS,EAAE,EAPL;AAQNC,MAAAA,YAAY,EAAE,OARR;AASNC,MAAAA,YAAY,EAAE,QATR;AAUNC,MAAAA,QAAQ,EAAE,IAVJ;AAWNC,MAAAA,KAAK,EAAE,EAXD;AAYNC,MAAAA,IAAI,EAAE,EAZA;AAaNC,MAAAA,IAAI,EAAE,EAbA;AAcNC,MAAAA,IAAI,EAAE,EAdA;AAeNC,MAAAA,IAAI,EAAE,EAfA;AAgBNC,MAAAA,aAAa,EAAE,OAhBT;AAiBNC,MAAAA,UAAU,EAAE,KAjBN;AAkBNC,MAAAA,MAAM,EAAE;AAlBF,KAAP;AAoBA;;AAEDC,EAAAA,QAAQ,CAACC,OAAD,EAAUL,IAAV,EAAgB;AACvB,SAAKM,QAAL,CAAcD,OAAd,EAAuBL,IAAvB;AACA;;AAEDM,EAAAA,QAAQ,CAACD,OAAD,EAAUL,IAAV,EAAgB;AACvB,QAAIlB,IAAI,GAAGkB,IAAI,CAAClB,IAAL,IAAauB,OAAO,CAACvB,IAAhC;AAAA,QACCc,KAAK,GAAGI,IAAI,CAACJ,KAAL,IAAcS,OAAO,CAACT,KAD/B;AAAA,QAECW,KAAK,GAAGP,IAAI,CAACA,IAAL,IAAaK,OAAO,CAACL,IAF9B;;AAGAK,IAAAA,OAAO,CAACtB,QAAR,GAAmBiB,IAAI,CAACjB,QAAL,IAAiBC,aAApC;AACAqB,IAAAA,OAAO,CAACpB,QAAR,GAAmBe,IAAI,CAACf,QAAL,IAAiBC,eAApC;AACAmB,IAAAA,OAAO,CAACL,IAAR,GAAeO,KAAf;AACAF,IAAAA,OAAO,CAACT,KAAR,GAAgBA,KAAhB;AACAS,IAAAA,OAAO,CAACZ,YAAR,GAAuBO,IAAI,CAACP,YAAL,IAAqB,OAA5C;AACA,QAAIU,MAAM,GAAG,EAAb;AACAE,IAAAA,OAAO,CAACN,IAAR,GAAeQ,KAAK,CAACC,GAAN,CAAU,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACxCP,MAAAA,MAAM,CAACQ,IAAP,CAAYF,GAAG,CAACJ,OAAO,CAACJ,aAAT,CAAf;AACA,aAAOnB,IAAI,CAAC0B,GAAL,CAAS,CAAC;AAAEI,QAAAA,GAAF;AAAOC,QAAAA,KAAK,GAAG,GAAf;AAAoBC,QAAAA,KAAK,GAAG;AAA5B,OAAD,KAA0C;AACzD,eAAO;AAAEC,UAAAA,KAAK,EAAEN,GAAG,CAACG,GAAD,CAAZ;AAAmBC,UAAAA,KAAnB;AAA0BC,UAAAA,KAA1B;AAAiCE,UAAAA,MAAM,EAAEX,OAAO,CAACb;AAAjD,SAAP;AACA,OAFM,CAAP;AAGA,KALc,CAAf;AAMAa,IAAAA,OAAO,CAACF,MAAR,GAAiBA,MAAjB;AACAE,IAAAA,OAAO,CAACH,UAAR,GAAsBG,OAAO,CAACF,MAAR,CAAec,MAAf,KAA0BZ,OAAO,CAACN,IAAR,CAAakB,MAA7D;AACAZ,IAAAA,OAAO,CAACP,IAAR,GAAehB,IAAI,CAAC0B,GAAL,CAAS,CAAC;AAAEU,MAAAA,KAAK,GAAG,EAAV;AAAcN,MAAAA,GAAG,GAAG,EAApB;AAAwBC,MAAAA,KAAK,GAAG,GAAhC;AAAqCC,MAAAA,KAAK,GAAG;AAA7C,KAAD,KAA2D;AAClF,aAAO;AAAEI,QAAAA,KAAF;AAASN,QAAAA,GAAT;AAAcC,QAAAA,KAAd;AAAqBC,QAAAA,KAArB;AAA4BE,QAAAA,MAAM,EAAEX,OAAO,CAACd;AAA5C,OAAP;AACA,KAFc,CAAf;;AAGA,QAAIK,KAAK,CAACqB,MAAN,GAAe,CAAnB,EAAsB;AACrBZ,MAAAA,OAAO,CAACR,IAAR,GAAeU,KAAK,CAACC,GAAN,CAAU,MAAM;AAC9B,eAAOZ,KAAK,CAACY,GAAN,CAAUW,CAAC,IAAI;AACrB,iBAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,CAAlB,EAAqB;AAAEN,YAAAA,KAAK,EAAER,OAAO,CAACb,SAAjB;AAA4BwB,YAAAA,MAAM,EAAEX,OAAO,CAACb;AAA5C,WAArB,CAAP;AACA,SAFM,CAAP;AAGA,OAJc,CAAf;;AAKA,UAAIa,OAAO,CAACZ,YAAR,KAAyB,OAA7B,EAAsC;AACrCY,QAAAA,OAAO,CAACX,YAAR,GAAwB,QAAOE,KAAK,CAACqB,MAAN,GAAeZ,OAAO,CAACb,SAAU,IAAhE;AACA,OAFD,MAEO;AACNa,QAAAA,OAAO,CAACX,YAAR,GAAwB,SAAQE,KAAK,CAACqB,MAAN,GAAeZ,OAAO,CAACb,SAAU,WAAUa,OAAO,CAACb,SAAU,IAA7F;AACA;AACD,KAXD,MAWO;AACNa,MAAAA,OAAO,CAACX,YAAR,GAAwB,gBAAxB;AACA;AACD;;AAGD4B,EAAAA,QADA,CACSjB,OADT,EACkBK,KADlB,EACyB;AACxB,QAAIa,MAAM,GAAGlB,OAAO,CAACF,MAAR,CAAeqB,OAAf,CAAuBd,KAAvB,CAAb;;AACA,QAAIa,MAAM,KAAK,CAAC,CAAhB,EAAmB;AAClBlB,MAAAA,OAAO,CAACF,MAAR,CAAeQ,IAAf,CAAoBD,KAApB;AACA,KAFD,MAEO;AACNL,MAAAA,OAAO,CAACF,MAAR,CAAesB,MAAf,CAAsBF,MAAtB,EAA8B,CAA9B;AACA;;AACDlB,IAAAA,OAAO,CAACH,UAAR,GAAsBG,OAAO,CAACF,MAAR,CAAec,MAAf,KAA0BZ,OAAO,CAACN,IAAR,CAAakB,MAA7D;AACA;;AAGDS,EAAAA,QADA,CACSrB,OADT,EACkB;AACjBA,IAAAA,OAAO,CAACH,UAAR,GAAqB,CAACG,OAAO,CAACH,UAA9B;;AACA,QAAIG,OAAO,CAACH,UAAZ,EAAwB;AACvBG,MAAAA,OAAO,CAACF,MAAR,GAAiBE,OAAO,CAACN,IAAR,CAAaS,GAAb,CAAiB,CAACW,CAAD,EAAIQ,CAAJ,KAAUA,CAA3B,CAAjB;AACA,KAFD,MAEO;AACNtB,MAAAA,OAAO,CAACF,MAAR,GAAiB,EAAjB;AACA;AACD;;AApFiC,C;eAuFpBxB,Y","sourcesContent":["import { Service, action } from \"adajs\";\nimport Head from './head';\nimport Body from './body/simple';\nimport Tool from './tool';\nimport Checkbox from './checkbox';\n\nclass TableService extends Service {\n\tdefaultData() {\n\t\treturn {\n\t\t\tcols: [],\n\t\t\theadType: Head,\n\t\t\tbodyType: Body,\n\t\t\ttoolType: Tool,\n\t\t\tcheckboxType: Checkbox,\n\t\t\ttitleHeight: 40,\n\t\t\trowHeight: 30,\n\t\t\ttoolPosition: 'right',\n\t\t\tbodyPosition: 'left:0',\n\t\t\tcheckbox: true,\n\t\t\ttools: [],\n\t\t\ttool: [],\n\t\t\thead: [],\n\t\t\tbody: [],\n\t\t\tdata: [],\n\t\t\tcheckPropName: 'check',\n\t\t\tisCheckAll: false,\n\t\t\tchecks: []\n\t\t};\n\t}\n\n\tonupdate(current, data) {\n\t\tthis.setTable(current, data);\n\t}\n\n\tsetTable(current, data) {\n\t\tlet cols = data.cols || current.cols,\n\t\t\ttools = data.tools || current.tools,\n\t\t\t_data = data.data || current.data;\n\t\tcurrent.headType = data.headType || Head;\n\t\tcurrent.bodyType = data.bodyType || Body;\n\t\tcurrent.data = _data;\n\t\tcurrent.tools = tools;\n\t\tcurrent.toolPosition = data.toolPosition || 'right';\n\t\tlet checks = [];\n\t\tcurrent.body = _data.map((col, index) => {\n\t\t\tchecks.push(col[current.checkPropName]);\n\t\t\treturn cols.map(({ key, width = 300, align = 'left' }) => {\n\t\t\t\treturn { value: col[key], width, align, height: current.rowHeight };\n\t\t\t});\n\t\t});\n\t\tcurrent.checks = checks;\n\t\tcurrent.isCheckAll = (current.checks.length === current.body.length);\n\t\tcurrent.head = cols.map(({ title = '', key = '', width = 300, align = 'left' }) => {\n\t\t\treturn { title, key, width, align, height: current.titleHeight };\n\t\t});\n\t\tif (tools.length > 0) {\n\t\t\tcurrent.tool = _data.map(() => {\n\t\t\t\treturn tools.map(a => {\n\t\t\t\t\treturn Object.assign({}, a, { width: current.rowHeight, height: current.rowHeight });\n\t\t\t\t});\n\t\t\t});\n\t\t\tif (current.toolPosition === 'right') {\n\t\t\t\tcurrent.bodyPosition = `left:${tools.length * current.rowHeight}px`;\n\t\t\t} else {\n\t\t\t\tcurrent.bodyPosition = `right:${tools.length * current.rowHeight}px;left:${current.rowHeight}px`;\n\t\t\t}\n\t\t} else {\n\t\t\tcurrent.bodyPosition = `left:0;right:0`;\n\t\t}\n\t}\n\n\t@action('checkRow')\n\tcheckRow(current, index) {\n\t\tlet _index = current.checks.indexOf(index);\n\t\tif (_index === -1) {\n\t\t\tcurrent.checks.push(index);\n\t\t} else {\n\t\t\tcurrent.checks.splice(_index, 1);\n\t\t}\n\t\tcurrent.isCheckAll = (current.checks.length === current.body.length);\n\t}\n\n\t@action('checkAll')\n\tcheckAll(current) {\n\t\tcurrent.isCheckAll = !current.isCheckAll;\n\t\tif (current.isCheckAll) {\n\t\t\tcurrent.checks = current.body.map((a, b) => b);\n\t\t} else {\n\t\t\tcurrent.checks = [];\n\t\t}\n\t}\n}\n\nexport default TableService;"]}